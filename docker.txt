docker run <image_name>
docker run --name <container_name> <image_name>
docker pull <image_name>

docker ps [options..]
-a flag:  shows us all the containers, stopped or running.
-l flag: shows us the latest container.
-q flag: shows only the Id of the containers. 

docker stop <container_ID/name>

--starts stopped container again
docker start <container_ID>


docker rm {options} <container_name or ID>
-f flag: remove the container forcefully.
-v flag: remove the volumes.
-l flag: remove the specific link mentioned.

--remove image in docker
docker rmi <image ID/ image name>

docker images

docker exec {options}
-d flag: for running the commands in the background.
-i flag: it will keep STDIN open even when not attached.
-e flag: sets the environment variables 

-run container with name from image and open bash shell (or sh shell)
docker run --name <container_name> --rm -it <iamge_name> bash

-if container is already running, so use exec
docker exec -it <container_name> sh

Port mappings
docker run -d -p <port_on_host>:<port_on_container> <container_name> 
docker run -d -p 8080:8080 <container_name>
-d => detached -> runs docker in the background

Docker push
docker push <Image name/Image ID> 

Docker Login -> It will ask you to enter the username and password after that you will authenticate with DockerHub and you can perform the tasks.
docker login 

Push image to hub
docker push <Image name/Image ID>
 
Docker Build -> The docker build command is used to build the docker images with the help of Dockerfile.
docker build -t image_name:tag .

Docker Stop (one or multiple containers)
docker stop <container1> <container2> <container3>

Docker Restart
docker restart container_name_or_id

Docker Inspection
docker inspect <container_name_or_id>
Docker containers will run into some errors in real time to debug the containerâ€™s errors you can use the following commands.

Docker Commit command
docker commit container_name_or_id new_image_name:tag
